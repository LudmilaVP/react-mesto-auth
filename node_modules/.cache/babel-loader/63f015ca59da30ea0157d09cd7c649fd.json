{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  //Загрузка информации о пользователе с сервера\n  getUserProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  //Загрузка карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  //Редактирование профиля\n  setUserProfile(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._getResponse);\n  }\n  //Добавление новой карточки\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._getResponse);\n  }\n  //Удаление карточки\n  removeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  //Постановка и снятие лайка\n  changeLikeCardStatus(id, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: isLiked ? \"DELETE\" : \"PUT\",\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n\n  //Обновление аватара пользователя\n  updateUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-50\",\n  headers: {\n    authorization: \"6d230dea-9c95-40e9-94e3-e33b18a30e51\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_getResponse","res","ok","json","Promise","reject","status","getUserProfile","fetch","method","then","getInitialCards","setUserProfile","data","body","JSON","stringify","name","about","addNewCard","link","removeCard","id","changeLikeCardStatus","isLiked","updateUserAvatar","avatar","api","authorization"],"sources":["C:/Users/Acer/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _getResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  //Загрузка информации о пользователе с сервера\r\n  getUserProfile() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._getResponse);\r\n  }\r\n  //Загрузка карточек с сервера\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then(this._getResponse);\r\n  }\r\n  //Редактирование профиля\r\n  setUserProfile(data) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    }).then(this._getResponse);\r\n  }\r\n  //Добавление новой карточки\r\n  addNewCard(data) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then(this._getResponse);\r\n  }\r\n  //Удаление карточки\r\n  removeCard(id) {\r\n    return fetch(`${this._baseUrl}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(this._getResponse);\r\n  }\r\n  //Постановка и снятие лайка\r\n  changeLikeCardStatus(id, isLiked) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n        method: isLiked ? \"DELETE\" : \"PUT\",\r\n        headers: this._headers\r\n      }).then(this._getResponse)\r\n  }\r\n\r\n  //Обновление аватара пользователя\r\n  updateUserAvatar(data) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar,\r\n      }),\r\n    }).then(this._getResponse);\r\n  }\r\n}\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-50\",\r\n  headers: {\r\n    authorization: \"6d230dea-9c95-40e9-94e3-e33b18a30e51\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}