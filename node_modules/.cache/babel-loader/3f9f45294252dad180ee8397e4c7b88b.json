{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  //Загрузка информации о пользователе с сервера\n  getUserProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  //Загрузка карточек с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  //Редактирование профиля\n  setUserProfile(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._getResponse);\n  }\n  //Добавление новой карточки\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._getResponse);\n  }\n  //Удаление карточки\n  removeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  //Постановка и снятие лайка\n  addLikeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  deleteLikeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n  //Обновление аватара пользователя\n  updateUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-50',\n  headers: {\n    authorization: '6d230dea-9c95-40e9-94e3-e33b18a30e51',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_getResponse","res","ok","json","Promise","reject","status","getUserProfile","fetch","method","then","getInitialCards","setUserProfile","data","body","JSON","stringify","name","about","addNewCard","link","removeCard","id","addLikeCard","deleteLikeCard","updateUserAvatar","avatar","api","authorization"],"sources":["C:/Users/Acer/dev/mestoreact/src/utils/api.js"],"sourcesContent":[" class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _getResponse(res) {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n        //Загрузка информации о пользователе с сервера\n    getUserProfile() {\n            return fetch(`${this._baseUrl}/users/me`, {\n                    method: 'GET',\n                    headers: this._headers\n                })\n                .then(this._getResponse)\n        }\n        //Загрузка карточек с сервера\n    getInitialCards() {\n            return fetch(`${this._baseUrl}/cards`, {\n                    method: 'GET',\n                    headers: this._headers\n                })\n                .then(this._getResponse)\n        }\n        //Редактирование профиля\n    setUserProfile(data) {\n            return fetch(`${this._baseUrl}/users/me`, {\n                    method: 'PATCH',\n                    headers: this._headers,\n                    body: JSON.stringify({\n                        name: data.name,\n                        about: data.about\n                    })\n                })\n                .then(this._getResponse)\n        }\n        //Добавление новой карточки\n    addNewCard(data) {\n            return fetch(`${this._baseUrl}/cards`, {\n                    method: 'POST',\n                    headers: this._headers,\n                    body: JSON.stringify({\n                        name: data.name,\n                        link: data.link\n                    })\n                })\n                .then(this._getResponse)\n        }\n        //Удаление карточки\n    removeCard(id) {\n            return fetch(`${this._baseUrl}/cards/${id}`, {\n                    method: 'DELETE',\n                    headers: this._headers,\n                })\n                .then(this._getResponse)\n        }\n        //Постановка и снятие лайка\n    addLikeCard(id) {\n        return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n                method: 'PUT',\n                headers: this._headers,\n            })\n            .then(this._getResponse)\n    }\n\n    deleteLikeCard(id) {\n            return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n                    method: 'DELETE',\n                    headers: this._headers,\n                })\n                .then(this._getResponse)\n        }\n        //Обновление аватара пользователя\n    updateUserAvatar(data) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    avatar: data.avatar,\n                })\n            })\n            .then(this._getResponse)\n    }\n}\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-50',\n    headers: {\n        authorization: '6d230dea-9c95-40e9-94e3-e33b18a30e51',\n        'Content-Type': 'application/json'\n    }\n});\nexport default api"],"mappings":"AAAC,MAAMA,GAAG,CAAC;EACPC,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAC/B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACnC;EAEAC,YAAY,CAACC,GAAG,EAAE;IACV,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,EAAE;IACrB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAClD;EACA;EACJC,cAAc,GAAG;IACT,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,WAAU,EAAE;MAClCa,MAAM,EAAE,KAAK;MACbV,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACDY,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAChC;EACA;EACJW,eAAe,GAAG;IACV,OAAOH,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,QAAO,EAAE;MAC/Ba,MAAM,EAAE,KAAK;MACbV,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACDY,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAChC;EACA;EACJY,cAAc,CAACC,IAAI,EAAE;IACb,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,WAAU,EAAE;MAClCa,MAAM,EAAE,OAAO;MACfV,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,KAAK,EAAEL,IAAI,CAACK;MAChB,CAAC;IACL,CAAC,CAAC,CACDR,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAChC;EACA;EACJmB,UAAU,CAACN,IAAI,EAAE;IACT,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,QAAO,EAAE;MAC/Ba,MAAM,EAAE,MAAM;MACdV,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfG,IAAI,EAAEP,IAAI,CAACO;MACf,CAAC;IACL,CAAC,CAAC,CACDV,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAChC;EACA;EACJqB,UAAU,CAACC,EAAE,EAAE;IACP,OAAOd,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,UAAS0B,EAAG,EAAC,EAAE;MACrCb,MAAM,EAAE,QAAQ;MAChBV,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACDY,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAChC;EACA;EACJuB,WAAW,CAACD,EAAE,EAAE;IACZ,OAAOd,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,UAAS0B,EAAG,QAAO,EAAE;MAC3Cb,MAAM,EAAE,KAAK;MACbV,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACDY,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAChC;EAEAwB,cAAc,CAACF,EAAE,EAAE;IACX,OAAOd,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,UAAS0B,EAAG,QAAO,EAAE;MAC3Cb,MAAM,EAAE,QAAQ;MAChBV,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACDY,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAChC;EACA;EACJyB,gBAAgB,CAACZ,IAAI,EAAE;IACnB,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACZ,QAAS,kBAAiB,EAAE;MACzCa,MAAM,EAAE,OAAO;MACfV,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBU,MAAM,EAAEb,IAAI,CAACa;MACjB,CAAC;IACL,CAAC,CAAC,CACDhB,IAAI,CAAC,IAAI,CAACV,YAAY,CAAC;EAChC;AACJ;AACA,MAAM2B,GAAG,GAAG,IAAIlC,GAAG,CAAC;EAChBI,OAAO,EAAE,6CAA6C;EACtDE,OAAO,EAAE;IACL6B,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AACF,eAAeD,GAAG"},"metadata":{},"sourceType":"module"}