{"ast":null,"code":"const BASE_URL = 'https://auth.nomoreparties.co';\nfunction _getResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => _getResponse(res));\n};\nexport const authorization = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => _getResponse(res));\n};\nexport const tokenCheck = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => _getResponse(res));\n};","map":{"version":3,"names":["BASE_URL","_getResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorization","tokenCheck","token"],"sources":["C:/Users/Acer/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nfunction _getResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  export const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ password, email })\r\n    })\r\n    .then(res => _getResponse(res))\r\n  }\r\n\r\n  export const authorization = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ password, email })\r\n    })\r\n    .then(res => _getResponse(res))\r\n  }\r\n  \r\n  export const tokenCheck = (token) => { \r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\"Content-Type\": \"application/json\",\r\n            \"Authorization\" : `Bearer ${token}`}\r\n    })\r\n    .then(res => _getResponse(res))\r\n  }"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,SAASC,YAAY,CAACC,GAAG,EAAE;EACvB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAED;IAAM,CAAC;EAC1C,CAAC,CAAC,CACDQ,IAAI,CAACf,GAAG,IAAID,YAAY,CAACC,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMgB,aAAa,GAAG,CAACT,KAAK,EAAEC,QAAQ,KAAK;EAChD,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAED;IAAM,CAAC;EAC1C,CAAC,CAAC,CACDQ,IAAI,CAACf,GAAG,IAAID,YAAY,CAACC,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAC,cAAc,EAAE,kBAAkB;MACtC,eAAe,EAAI,UAASO,KAAM;IAAC;EAC3C,CAAC,CAAC,CACDH,IAAI,CAACf,GAAG,IAAID,YAAY,CAACC,GAAG,CAAC,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module"}